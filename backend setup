ssh into ec2

# update
sudo apt update && sudo apt upgrade -y

# essential packages
sudo apt install -y nginx git curl build-essential

# NodeJS (LTS 20)
curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
sudo apt install -y nodejs

# PM2 (process manager)
sudo npm install -g pm2

# certbot for TLS (install but run later)
sudo apt install -y certbot python3-certbot-nginx

sudo mkdir -p /var/www/autoverse
sudo chown ubuntu:ubuntu /var/www/autoverse
cd /var/www/autoverse

git clone https://github.com/YOUR_USERNAME/YOUR_REPO.git .

cd /var/www/autoverse/backend

cat > .env <<'EOF'
DATABASE_URL=postgres://username:password@host:5432/dbname
PORT=5000
JWT_SECRET=your_jwt_secret_here
OPENAI_API_KEY=sk-...
NODE_ENV=production
EOF

chmod 600 .env

npm install
PORT=5000 node server.js  # test manually

cd /var/www/autoverse/backend
pm2 start server.js --name autoverse-backend
pm2 save
sudo pm2 startup systemd -u ubuntu --hp /home/ubuntu
# run the extra sudo command PM2 prints


edit the inbound rules as 5000 to allow backend to run


udo chown ubuntu:ubuntu /var/www/autoverse
chown = change owner of a file or folder.

ubuntu:ubuntu = sets both the owner and the group to your EC2 user (ubuntu).

Why? When you clone a repo into /var/www, it’s often owned by root because /var/www is a privileged directory.
Without changing ownership, you’ll need sudo every time you edit, install, or build — which is annoying and can mess up file permissions.
